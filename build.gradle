plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = '1.0.0'
group = 'mremenar'
base {
    archivesName = 'revival'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

def mc_version = '1.20.1'
def forge_version = '47.3.0'

minecraft {
    mappings channel: 'official', version: mc_version
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods { "${mod_id}" { source sourceSets.main } }
        }
        client { property 'forge.enabledGameTestNamespaces', mod_id }
        server { property 'forge.enabledGameTestNamespaces', mod_id; args '--nogui' }
        gameTestServer { property 'forge.enabledGameTestNamespaces', mod_id }
        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

tasks.named('processResources', ProcessResources).configure {
    def props = [
        minecraft_version: mc_version,
        forge_version   : forge_version,
        mod_id          : 'revival',
        mod_name        : '1.7.10 Revival',
        mod_version     : project.version,
        mod_authors     : 'Mremenar',
        mod_license     : 'MIT',
        mod_description : 'OreSpawn entities revived for 1.20.1!'
    ]
    inputs.properties props
    filesMatching(['META-INF/mods.toml']) { expand props }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
            'Specification-Title' : mod_id,
            'Specification-Vendor': mod_authors,
            'Specification-Version': '1',
            'Implementation-Title' : project.name,
            'Implementation-Version': project.jar.archiveVersion,
            'Implementation-Vendor' : mod_authors,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}